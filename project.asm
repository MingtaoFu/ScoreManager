DATAS SEGMENT
    ;此处输入数据段代码  
    SCORE1 DB '6375638472847362748273719473945927499865346546786543'
    SCORE2 DB '2748273719473945927499865346546786543637563847284736'
    SCORE3 DB '7362748273719473945927499865346546786543637563847284'
    SCORE4 DB '5467865463756384728473627482737194739459274998653463'
    SCORE5 DB '4827371947394592749986534654678654637563847284736273'
    SCORE6 DB '0000000000000000000000000000000000000000000000000000'
    TOTAL  DB 78 DUP(0)    
    
    DIR DB 'Please enter the NO.$'
    CHENG10 DB 10
    CHENG2 DB 2
BUF DB 10
	DB 0
	DB 10 DUP(0)
	CRLF DB 0DH,0AH,'$'
DATAS ENDS

STACKS SEGMENT
    ;此处输入堆栈段代码
STACKS ENDS

SHOWSCORE MACRO SCORE
	MOV DL,SCORE[BX]
	MOV AH,2
	INT 21H
	MOV DL,SCORE[BX+1]
	MOV AH,2
	INT 21H
	MOV DL,32
	MOV AH,2
	INT 21H
	ENDM
	
ENTER1 MACRO CODE
	LEA DX,CODE
	MOV AH,9
	INT 21H
	ENDM


CODES SEGMENT
    ASSUME CS:CODES,DS:DATAS,SS:STACKS
START:
    MOV AX,DATAS
    MOV DS,AX
    ;此处输入代码段代码
    ;LEA DX, SCORE
    ;MOV AH, 9H
    ;INT 21H
    ;INT 21H
    CALL SHOWONE
    MOV AH,4CH
    INT 21H

SHOWONE PROC NEAR
	CALL GETNUM
	
	CALL CALC
	
	SHOWSCORE SCORE1
	SHOWSCORE SCORE2
	SHOWSCORE SCORE3
	SHOWSCORE SCORE4
	SHOWSCORE SCORE5
	SHOWSCORE SCORE6
	
	
	
	RET
SHOWONE ENDP



;----------------------获得学号并存入BX-------------------
GETNUM PROC NEAR
	;显示提示
	LEA DX,DIR
	MOV AH,9
	INT 21H
	
	ENTER1 CRLF
	
	LEA DX,BUF
	MOV AH,0AH
	INT 21H
	
	;回车换行
	ENTER1 CRLF
	
	MOV AL, BUF+2
	MOV BL, BUF+3
	SUB AL,30H
	SUB BL,30H	;关于从0开始与从1开始
	
	MUL CHENG10
	
	MOV BH,0
	ADD AX,BX
	
	MUL CHENG2
	MOV BX,AX
	RET
GETNUM ENDP
;---------------------------------------------------

;----------------------计算总分并存入相应位置----------------
CALC PROC NEAR
	MOV AX,0
	ADD AL,SCORE1[BX]
	SUB AL,30H
	ADD AL,SCORE2[BX]
	SUB AL,30H
	ADD AL,SCORE3[BX]
	SUB AL,30H
	ADD AL,SCORE4[BX]
	SUB AL,30H
	ADD AL,SCORE5[BX]
	SUB AL,30H
	ADD AL,SCORE6[BX]
	SUB AL,30H
	MUL CHENG10
	MOV DX,0
	ADD DL,SCORE1[BX+1]
	SUB DL,30H
	ADD DL,SCORE2[BX+1]
	SUB DL,30H
	ADD DL,SCORE3[BX+1]
	SUB DL,30H
	ADD DL,SCORE4[BX+1]
	SUB DL,30H
	ADD DL,SCORE5[BX+1]
	SUB DL,30H
	ADD DL,SCORE6[BX+1]
	SUB DL,30H
	ADD AX,DX
	RET
CALC ENDP


CODES ENDS
    END START




.386
DATAS SEGMENT USE16
    ;此处输入数据段代码  
    SCORE1 DB '6375638472847362748273719473945927499865346546786543'
    SCORE2 DB '2748273719473945927499865346546786543637563847284736'
    SCORE3 DB '7362748273719473945927499865346546786543637563847284'
    SCORE4 DB '5467865463756384728473627482737194739459274998653463'
    SCORE5 DB '4827371947394592749986534654678654637563847284736273'
    SCORE6 DB '0200000000000000000000000000000000000000000000000000'
    TOTAL DB '1230000000000000000000000000000000000000000000000000',
    '000000000000'
    
    DIR DB 'Please enter the NO.$'
    COMMAND DB 'Please input the command. 1:show one, 2: set 6th score.$'
    SETSCOREDIR DB 'Please input the score.$'
    CHENG10 DB 10
    CHENG2 DB 2
    CHENG3 DB 3
BUF DB 10
	DB 0
	DB 10 DUP(0)
	CRLF DB 0DH,0AH,'$'
DATAS ENDS

STACKS SEGMENT USE16
    ;此处输入堆栈段代码
STACKS ENDS

SHOWTOTAL MACRO SCORE
	MOV AL,CL
	MUL CHENG3
	MOV BX,AX
	MOV DL,SCORE[BX]
	MOV AH,2
	INT 21H
	MOV DL,SCORE[BX+1]
	MOV AH,2
	INT 21H
	MOV DL,SCORE[BX+2]
	MOV AH,2
	INT 21H
	ENDM
	
SHOWSCORE MACRO SCORE

	MOV AL,CL
	MUL CHENG2
	MOV BX,AX
	
	MOV DL,SCORE[BX]
	MOV AH,2
	INT 21H
	MOV DL,SCORE[BX+1]
	MOV AH,2
	INT 21H
	MOV DL,32
	MOV AH,2
	INT 21H
	ENDM
	
ENTER1 MACRO CODE
	LEA DX,CODE
	MOV AH,9
	INT 21H
	ENDM


CODES SEGMENT USE16
    ASSUME CS:CODES,DS:DATAS,SS:STACKS,ES:DATAS
START:
    MOV AX,DATAS
    MOV DS,AX
L:
	LEA DX,COMMAND
	MOV AH,9
	INT 21H
	
	ENTER1 CRLF
	
	LEA DX,BUF
	MOV AH,0AH
	INT 21H
	
	CMP BUF[2],31H
	JZ SHOWONESEC
	
	CMP BUF[2],32H
	JZ SETSEC
	
	JMP L
	
SHOWONESEC:
	CALL SHOWONE
	JMP L
	
SETSEC:
	CALL GETNUM
	
	LEA DX,SETSCOREDIR
	MOV AH,9
	INT 21H
	
	ENTER1 CRLF
	
	JMP L  

SHOWONE PROC NEAR
	CALL GETNUM
	
	CALL CALC
	
	SHOWSCORE SCORE1
	SHOWSCORE SCORE2
	SHOWSCORE SCORE3
	SHOWSCORE SCORE4
	SHOWSCORE SCORE5
	SHOWSCORE SCORE6
	SHOWTOTAL TOTAL
	
	ENTER1 CRLF
	
	
	RET
SHOWONE ENDP



;----------------------获得学号并存入CL-------------------
GETNUM PROC NEAR
	;显示提示
	LEA DX,DIR
	MOV AH,9
	INT 21H
	
	ENTER1 CRLF
	
	LEA DX,BUF
	MOV AH,0AH
	INT 21H
	
	;回车换行
	ENTER1 CRLF
	
	MOV AL, BUF+2
	MOV BL, BUF+3
	SUB AL,30H
	SUB BL,30H	;关于从0开始与从1开始
	
	MUL CHENG10
	
	MOV BH,0
	ADD AX,BX
	
	MOV CL,AL
	;MUL CHENG2
	;MOV BX,AX
	RET
GETNUM ENDP
;---------------------------------------------------

;----------------------计算总分并存入相应位置----------------
CALC PROC NEAR
	MOV AL,CL
	;MOV CL,BL
	MUL CHENG2
	MOV BX,AX
	
	MOV AX,0
	ADD AL,[BX]+SCORE1
	SUB AL,30H
	ADD AL,SCORE2[BX]
	SUB AL,30H
	ADD AL,SCORE3[BX]
	SUB AL,30H
	ADD AL,SCORE4[BX]
	SUB AL,30H
	ADD AL,SCORE5[BX]
	SUB AL,30H
	ADD AL,SCORE6[BX]
	SUB AL,30H
	MUL CHENG10
	MOV DX,0
	ADD DL,SCORE1[BX+1]
	SUB DL,30H
	ADD DL,SCORE2[BX+1]
	SUB DL,30H
	ADD DL,SCORE3[BX+1]
	SUB DL,30H
	ADD DL,SCORE4[BX+1]
	SUB DL,30H
	ADD DL,SCORE5[BX+1]
	SUB DL,30H
	ADD DL,SCORE6[BX+1]
	SUB DL,30H
	ADD AX,DX
	
	MOV DX,AX
	
	MOV AL,CL
	;MOV CL,BL
	MUL CHENG3
	MOV BX,AX
	
	MOV AX,DX
	
	DIV CHENG10		;SHANG IN AL,YUSHU IN AH
	MOV CH,AL
	MOV AL,AH
	
	
	;LEA DI,TOTAL[BX+2]
	
	;STOSB
	ADD AL,30H
	MOV TOTAL[BX+2],AL
	
	
	
	MOV AL,CH
	MOV AH,0
	DIV CHENG10
	
	MOV CH,AL
	MOV AL,AH
	;LEA DI,TOTAL[BX+1]
	;MOV DI,OFFSET TOTAL[BX]
	ADD AL,30H
	mov total[bx+1],al
	;STOSB
	;mov di,4
	;mov total[0],3
	;;;;;
	MOV DL,TOTAL[BX+1]
	MOV AH,2
	INT 21H
	;;;;;
	MOV AL,CH
	ADD AL,30H
	mov total[bx],al
	;LEA DI,TOTAL[BX]
	;STOSB
	
	RET
CALC ENDP


CODES ENDS
    END START






